AWSTemplateFormatVersion: '2010-09-09'
Description: 'Create RDS Instance'

Resources:
# My VPC
  MyVPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: '172.16.0.0/16'
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: MyVPC
# Public Subnet in AZ1
  PublicSubnet1A:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: '172.16.1.0/24'
      AvailabilityZone: !Select [0, !GetAZs '']
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: PublicSubnet1A
# App Private Subnet in AZ1  
  AppPrivateSubnet1A:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: '172.16.2.0/24'
      AvailabilityZone: !Select [0, !GetAZs '']
      Tags:
        - Key: Name
          Value: AppPrivateSubnet1A
# Data Private Subnet in AZ1          
  DataPrivateSubnet1A:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: '172.16.3.0/24'
      AvailabilityZone: !Select [0, !GetAZs '']
      Tags:
        - Key: Name
          Value: DataPrivateSubnet1A
# Public Subnet in AZ2  
  PublicSubnet2B:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: '172.16.4.0/24'
      AvailabilityZone: !Select [1, !GetAZs '']
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: PublicSubnet2B
# App Private Subnet in AZ2
  AppPrivateSubnet2B:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: '172.16.5.0/24'
      AvailabilityZone: !Select [1, !GetAZs '']
      Tags:
        - Key: Name
          Value: AppPrivateSubnet2B
# Data Private Subnet in AZ2
  DataPrivateSubnet2B:
    Type: 'AWS::EC2::Subnet'  
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: '172.16.6.0/24'
      AvailabilityZone: !Select [1, !GetAZs '']
      Tags:
        - Key: Name
          Value: DataPrivateSubnet2B  

# Internet Gateway IGW
  InternetGateway:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags: 
        - Key: Name
          Value: MyVPC-IGW

  # Attach Gateway
  AttachGateway:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref MyVPC
      InternetGatewayId: !Ref InternetGateway
  
  # Route Table
  PublicRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref MyVPC
      Tags:
        - Key: Name
          Value: PublicRouteTable
  # Public Route
  PublicRoute:
    Type: 'AWS::EC2::Route'
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: '0.0.0.0/0'
      GatewayId: !Ref InternetGateway
  
  # Route Table Association 1A
  PublicSubnet1ARouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties: 
      SubnetId: !Ref PublicSubnet1A
      RouteTableId: !Ref PublicRouteTable

  # Route Table Association 2B
  PublicSubnet2BRouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties: 
      SubnetId: !Ref PublicSubnet2B
      RouteTableId: !Ref PublicRouteTable

# Bastion Host EC2
  BastionHost:
    Type: 'AWS::EC2::Instance'
    Properties:
      InstanceType: t2.micro
      KeyName: BastionHost
      ImageId: ami-09da212cf18033880
      SubnetId: !Ref PublicSubnet1A
      SecurityGroupIds:
        - !Ref BastionSG
      Tags:
        - Key: Name
          Value: BastionHost

  # Bastion Security Group
  BastionSG:
    Type: 'AWS::EC2::SecurityGroup'          
    Properties:
      GroupDescription: 'Enable SSH access'
      VpcId: !Ref MyVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: #Place_your_own_Public_Ip_address/32

  # AppInstance1A
  AppInstance1A:
    Type: 'AWS::EC2::Instance'
    Properties:
      InstanceType: t2.micro
      KeyName: BastionHost
      ImageId: ami-09da212cf18033880
      SubnetId: !Ref AppPrivateSubnet1A
      SecurityGroupIds:
        - !Ref AppInstance1ASG
      Tags:
        - Key: Name
          Value: App1

  # SG App 1A
  AppInstance1ASG:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: 'Allow SSH from Bastion'
      VpcId: !Ref MyVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          SourceSecurityGroupId: !Ref BastionSG

  # AppInstance2A
  AppInstance2A:
    Type: 'AWS::EC2::Instance'
    Properties:
      InstanceType: t2.micro
      KeyName: AppInstance2A
      ImageId: ami-09da212cf18033880
      SubnetId: !Ref DataPrivateSubnet1A
      SecurityGroupIds:
        - !Ref AppInstance2ASG
      Tags:
        - Key: Name
          Value: App2A

  # SG App 2A
  AppInstance2ASG:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: 'Allow SSH from AppInstance1A'
      VpcId: !Ref MyVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          SourceSecurityGroupId: !Ref AppInstance1ASG

 # Create DataBaseSubnetGroup
  myDBSubnetGroup: 
    Type: AWS::RDS::DBSubnetGroup
    Properties: 
      DBSubnetGroupDescription: 'RDS Subnet in AZ-1A'
      SubnetIds: 
        - !Ref DataPrivateSubnet1A
        - !Ref DataPrivateSubnet2B
  
  # Create DataBaseInstance
  RDSDBInstance:
    Type: 'AWS::RDS::DBInstance'
    Properties:
      AllocatedStorage: 20
      DBInstanceIdentifier: 'rds-database-in-az-1a'
      DBInstanceClass: 'db.t3.micro'
      DBSubnetGroupName: !Ref myDBSubnetGroup
      Engine: 'mysql'
      EngineVersion: 8.0.39
      MasterUsername: 'admin'
      MasterUserPassword: 'password'
      VPCSecurityGroups: 
        - !Ref DbSecurityByEC2SecurityGroup
  
  # Create DabatbaseSG
  DbSecurityByEC2SecurityGroup:  
    Type: 'AWS::EC2::SecurityGroup'
    Properties: 
      GroupDescription: "Ingress for Amazon EC2 security group"
      VpcId: !Ref MyVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          SourceSecurityGroupId: !Ref AppInstance1ASG
          
      
